# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: "1.20"

    - name: Build
      run: go build ./...

    - name: Test
      run: go test -timeout 15m ./...
      
    - name: Race
      run: go test -race ./core/...

  deploy:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    # needs: [build]
    steps:
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Bump version
      run: |
        version_file="params/version.go"
        # Bump version, patch by default - also checks if previous commit message contains `[bump X]`, and if so, bumps the appropriate semver number - https://github.com/treeder/dockers/tree/master/bump
        docker run --rm -it --volumes-from file -w / treeder/bump --filename $version_file "$(git log -1 --pretty=%B)"
        version=$(grep -m1 -Eo "[0-9]+\.[0-9]+\.[0-9]+" $version_file)
        echo "Version: $version"
        git add -u
        git commit -m "$image: $version release [skip ci]"
        git tag -f -a "v$version" -m "version $version"
        git push
        git push origin v$version
    - name: Build and push
      uses: docker/build-push-action@v4
      with:
        push: true
        tags: ghcr.io/gochain/gochain:newtmp
    # - name: Docker Push
    #   run: |
    #     echo $DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin
    #     docker build . -t gochain/gochain:${GITHUB_REF_NAME}
    #     docker push gochain/gochain:${GITHUB_REF_NAME}
    #     echo $GOOGLE_AUTH > ${GITHUB_WORKSPACE}/gcloud-service-key.json
    #     echo $GOOGLE_AUTH | docker login -u _json_key --password-stdin https://gcr.io
    #     ./tmp/google-cloud-sdk/bin/gcloud auth activate-service-account --key-file=${GITHUB_WORKSPACE}/gcloud-service-key.json
    #     docker tag gochain/gochain:${GITHUB_REF_NAME} gcr.io/gochain-core/gochain:${GITHUB_REF_NAME}
    #     docker push gcr.io/gochain-core/gochain:${GITHUB_REF_NAME}
